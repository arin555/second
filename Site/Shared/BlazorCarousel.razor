@inject ISnackbar Snackbar
@using Models
@using Microsoft.AspNetCore.Http
@using Site.Data
@using System.Collections.Generic
@using iText.Kernel.Pdf
@using Spire.Xls
@using SautinSoft.Document
<style>
    .mud-carousel{
               display:block !important;
           }
</style>
@code {
    private bool arrows = false;
    private bool bullets = false;
    private bool enableSwipeGesture = true;
    private bool autocycle = false;
    private bool indeterminate;
    private bool isVisible;
    private Transition transition = Transition.Slide;

    public string MudText = "Перетащите файл сюда или нажмите, чтобы загрузить";
    private string _buttonName = "Загрузить";
    private string _path = "./wwwroot/Files/";

    private bool Clearing = false;
    private static string DefaultDragClass = "relative rounded-lg border-dashed border-2 pa-4 mt-4 mud-width-full mud-height-full";
    private string DragClass = DefaultDragClass;

    private int pagesCounter;

    private MudCarousel<object> _carousel;

    private List<string> fileNames = new List<string>();
    private List<string> allowedContentTypes = new List<string>() { "application/msword",
        "application/pdf",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" };

    IBrowserFile file;

    private void OnInputFileChanged(InputFileChangeEventArgs e)
    {
        ClearDragClass();
        file = e.File;
        if (fileNames.Count == 1)
            fileNames[0] = file.Name;
        MudText = "";

        if (fileNames.Count >= 1)
            return;

        if (allowedContentTypes.Contains(file.ContentType))
            fileNames.Add(file.Name);
    }

    private async Task Clear()
    {
        Clearing = true;
        fileNames.Clear();
        ClearDragClass();
        await Task.Delay(100);
        Clearing = false;
        MudText = "Перетащите файл сюда или нажмите, чтобы загрузить.";

        CheckAllPagesInkCoverage();
    }

    private async Task Upload()
    {
        string full_path = _path + file.Name;

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("TODO: Upload your files!", Severity.Normal);
        isVisible = true;
        indeterminate = true;
        var ms = new MemoryStream();
        await file.OpenReadStream(5120000000).CopyToAsync(ms);
        await File.WriteAllBytesAsync(full_path , ms.ToArray());

        runConvertFileToPdf(full_path);

        if (Path.GetExtension(_path + file.Name).Contains(".docx"))
        {
            DocumentCore dc = DocumentCore.Load(_path + file.Name);
            pagesCounter = Convert.ToInt32(dc?.Document.Properties.BuiltIn[BuiltInDocumentProperty.Pages]);
            Console.WriteLine(_path + file.Name);
            Console.WriteLine(pagesCounter);
        }

        if (Path.GetExtension(_path + file.Name).Contains(".doc"))
        {
            DocumentCore dc = DocumentCore.Load(_path + file.Name);
            dc.CalculateStats();
            pagesCounter = Convert.ToInt32(dc?.Document.Properties.BuiltIn[BuiltInDocumentProperty.Pages]);
            Console.WriteLine(_path + file.Name);
            Console.WriteLine(pagesCounter);
        }

        if (Path.GetExtension(_path + file.Name).Contains(".pdf"))
        {
            PdfDocument pdfDocument = new PdfDocument(new PdfReader(_path + file.Name));
            pagesCounter = pdfDocument.GetNumberOfPages();
        }

        if (Path.GetExtension(_path + file.Name).Contains(".xls"))
        {
            Workbook wb = new Workbook();
            wb.LoadFromFile(_path + file.Name);
            var pageInfoList = wb.GetSplitPageInfo();
            int sheetCount = pageInfoList.Count;
            int pageCount = 0;
            Console.WriteLine(sheetCount);
            for (int i = 0; i < sheetCount; i++)
            {
                pageCount += pageInfoList[i].Count;
                Console.WriteLine(pageCount);
                pagesCounter = pageCount;
            }
        }

        if (pagesCounter != 0)
        {
            indeterminate = false;
            _carousel.MoveTo(1);
        }
    }

    private void Back()
    {
        isVisible = false;
        _buttonName = "Дальше";
        _carousel.MoveTo(0);
    }

    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        DragClass = DefaultDragClass;
    }

    private void runConvertFileToPdf(string full_file_name)
    {
        string full_path = Path.GetFullPath(full_file_name);
        string ext = Path.GetExtension(full_path);
        string file_name_pdf = Path.GetDirectoryName(full_path) + "\\convert_file_" + Path.GetFileNameWithoutExtension(full_path) + "_.pdf";

        switch (ext)
        {
            case ".doc":
            case ".docx":
                var appWord = new Microsoft.Office.Interop.Word.Application();
                appWord.Visible = false;
                // appWord.DisplayAlerts = False;
                if (appWord.Documents != null)
                {
                    //    yourDoc is your word document
                    var wordDocument = appWord.Documents.Open(full_path);

                    if (wordDocument != null)
                    {
                        wordDocument.ExportAsFixedFormat(file_name_pdf, Microsoft.Office.Interop.Word.WdExportFormat.wdExportFormatPDF);
                        //wordDocument.Close(false, "", false);
                        wordDocument.Close();
                    }
                    appWord.Quit();
                }
                break;
            case ".xls":
            case ".xlsx":
                var appExel = new Microsoft.Office.Interop.Excel.Application();
                appExel.Visible = false;
                if (appExel.Workbooks != null)
                {
                    var excelDocument = appExel.Workbooks.Open(full_path);
                    if (excelDocument != null)
                    {
                        excelDocument.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF, file_name_pdf);
                        excelDocument.Close(); //Close document

                    }

                    appExel.Quit(); //Important: When you forget this Excel keeps running in the background
                }
                break;
            default:
                return;
        }
        return;
    }

    private static void CheckAllPagesInkCoverage()
    {
        Dictionary<int, GhostscriptPageInkCoverage> pages = GhostscriptPdfInfo.GetInkCoverage("C:/Users/avech/source/repos/TelegramBot/TelegramBot/14.pdf");

        string outputTextTemplate = "Page {0} ink coverage -> C:{1}% / M:{2}% / Y:{3}% / K:{4}%";

        foreach (var kvp in pages)
        {
            GhostscriptPageInkCoverage pic = kvp.Value;

            Console.WriteLine(outputTextTemplate, pic.Page, pages[pic.Page].C, pages[pic.Page].M, pages[pic.Page].Y, pages[pic.Page].K);
        }
    }
}


<div class="fullsize-container" style=" width: 1150px; height: 100%; margin: 0 auto; overflow-x:hidden; overflow-y:auto">
    <MudCarousel Class="mud-width-full" @ref=" _carousel  " Style="overflow-x:hidden; overflow-y:auto" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
        <MudCarouselItem Transition="transition">
            <h2 class="description">Добавьте документ, который хотите распечатать</h2>
            <MudPaper @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass" Height="425px" Width="90%" Outlined="true" Class="@DragClass" Style="margin: 0 auto; border:3px dashed #bdbdbd; background-color: #e6e7ee;">
                @if (!Clearing)
                {
                    <InputFile OnChange="OnInputFileChanged" class="absolute mud-width-full mud-height-full overflow-hidden z-2" style="opacity: 0; border: 15px; top: 0px" accept=".docx, .doc, .pdf, .xls, .xlsx" />
                }
                <MudText Class="DragNDrop">@MudText</MudText>

                @foreach (var file in fileNames)
                {
                    <div class="container">
                        <MudOverlay Visible="isVisible" DarkBackground="false" Absolute="true">
                            <MudProgressCircular Color="MudBlazor.Color.Primary" Size="Size.Large" Indeterminate="true" />
                        </MudOverlay>
                        <MudChip Icon="@Icons.Material.Filled.DocumentScanner" Color="MudBlazor.Color.Dark" Text="@file" />
                    </div>
                }
            </MudPaper>

            <MudToolBar DisableGutters="true" Class="gap-4">
                <MudButton OnClick="Clear" Disabled="@(!fileNames.Any())" Class="button" DisableRipple="true" DisableElevation="false">Очистить</MudButton>
                <MudButton OnClick="Upload" Disabled="@(!fileNames.Any())" Class="button" DisableRipple="true" DisableElevation="false" type="submit">@_buttonName</MudButton>
            </MudToolBar>
        </MudCarouselItem>
        
        <MudCarouselItem Transition="transition" Style="bottom: auto" Class="mud-carousel-item-second">
            @*<h2 class="description">Количество страниц в документе: @pagesCounter</h2>*@

            <div style="height: 100%">
                <div class="row" style="width:150%; margin:auto">
                    <div class="col-12 col-md-8" style="padding-top: 35px; padding-left: 35px; padding-right: 35px">
                        <div class="card bg-primary shadow-soft border-light p-4">
                            <!-- Header -->
                            <div class="card-header border-bottom text-center">
                                <span class="d-block">
                                    <span class="display-1 font-weight-bold">
                                        <span class="align-top font-medium"></span>@pagesCounter
                                    </span>
                                    <span class="text-gray font-small">/ Страниц в документе</span>
                                </span>
                            </div>
                            <!-- End Header -->
                            <!-- Content -->
                            <div class="card-body">
                                <p>А если подробнее</p>
                                <ul class="list-unstyled mb-4">
                                    <li class="list-item pb-2"><strong>Чёрно-белых:</strong> </li>
                                    <li class="list-item pb-2"><strong>Цветных:</strong> </li>
                                </ul>
                            </div>
                            <!-- End Content -->
                        </div>
                    </div>
                </div>
                <div class="row" style="width:150%; margin:auto">
                    <div class="col-12 col-md-8" style="padding-top: 35px; padding-left: 35px; padding-right: 35px">
                        <div class="card bg-primary shadow-soft border-light p-4">
                            <!-- Header -->
                            <div class="card-header border-bottom text-center">
                                <span class="d-block">
                                    <span class="display-1 font-weight-bold">
                                        <span class="align-top font-medium"></span>Теперь давайте выберем формат печати
                                    </span>
                                </span>
                            </div>
                            <!-- End Header -->
                            <!-- Content -->
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12">
                                        <!-- Tab Nav -->
                                        <div class="nav-wrapper position-relative mb-4" style="justify-content: space-around">
                                            <fieldset>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="exampleRadios1" id="exampleRadios1" value="option1">
                                                    <label class="form-check-label" for="exampleRadios1">
                                                        А1
                                                    </label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="exampleRadios1" id="exampleRadios2" value="option2">
                                                    <label class="form-check-label" for="exampleRadios2">
                                                        А2
                                                    </label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="exampleRadios1" id="exampleRadios3" value="option3">
                                                    <label class="form-check-label" for="exampleRadios3">
                                                        А3
                                                    </label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="exampleRadios1" id="exampleRadios4" value="option4" checked>
                                                    <label class="form-check-label" for="exampleRadios4">
                                                        А4
                                                    </label>
                                                </div>
                                            </fieldset>
                                        </div>
                                        <!-- End of Tab Nav -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- End Content -->
                    </div>
                </div>

                <div class="row" style="width:150%; margin:auto">
                    <div class="col-12 col-md-8" style="padding-top: 35px; padding-left: 35px; padding-right: 35px">
                        <div class="card bg-primary shadow-soft border-light p-4">
                            <!-- Header -->
                            <div class="card-header border-bottom text-center">
                                <div class="switch-holder">
                                    <div class="switch-label">
                                        <i class="fa fa-bluetooth-b"></i><span>Учитывать цветность при печати?</span>
                                    </div>
                                    <div class="switch-toggle">
                                        <input type="checkbox" id="bluetooth">
                                        <label for="bluetooth"></label>
                                    </div>
                                </div>
                            </div>
                            <!-- End Header -->
                        </div>
                    </div>
                </div>

                <div class="row" style="width:150%; margin:auto">
                    <div class="col-12 col-md-8" style="padding: 35px">
                        <div class="card bg-primary shadow-soft border-light p-4">
                            <!-- Header -->
                            <div class="card-header border-bottom text-center">
                                <span class="d-block">
                                    <span class="display-1 font-weight-bold">
                                        <span class="align-top font-medium"></span>Какие страницы напечатать?
                                    </span>
                                </span>
                            </div>
                            <!-- End Header -->
                            <!-- Content -->
                            <div class="card-body">
                                <fieldset>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="exampleRadios2" id="exampleRadios5" value="option5" checked>
                                        <label class="form-check-label" for="exampleRadios5">
                                            Все
                                        </label>
                                    </div>
                                    <div class="form-check" style="display: inline-block">
                                        <input class="form-check-input" type="radio" name="exampleRadios2" id="exampleRadios6" value="option6">
                                        <label class="form-check-label" for="exampleRadios6">
                                            Выбрать
                                        </label>
                                        <div class="form-group" style="display: inline-block">
                                            <div class="input-group mb-4">
                                                <input class="form-control" id="exampleInputIcon2" placeholder="Пример: 1, 2, 3, 5-8..." aria-label="Input group" type="text">
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <!-- End Content -->
                        </div>
                    </div>
                </div>
            </div>

            <MudToolBar DisableGutters="true" Class="gap-4">
                <MudButton OnClick="Back" Disabled="false" Class="button" DisableRipple="true" DisableElevation="false">Назад</MudButton>
                <MudButton Disabled="false" Class="button" DisableRipple="true" DisableElevation="false">Оформить заказ</MudButton>
            </MudToolBar>
        </MudCarouselItem>


        <MudCarouselItem Transition="transition">
            <div class="d-flex" style="height:100%">
            </div>
        </MudCarouselItem>
        <style>
            .mud-carousel-item{
                position:relative;
            }
           .mud-carousel{
               display:block !important;
           }
            .mud-carousel-item-second{
               margin-top:-530px !important;
            }
            .container {
                text-align: center;
                width: 100%;
                margin: 0 auto;
            }

            .button {
                color: #090909;
                padding: 0.7em 1.7em;
                font-size: 18px;
                border-radius: 0.5em;
                background: #e8e8e8;
                border: 1px solid #e8e8e8;
                transition: all .3s;
                box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
                font-family: 'Montserrat', sans-serif;
                font-weight: 300;
            }


                .button:active {
                    color: #666;
                    box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;
                }

            .mud-button:hover, .mud-button:focus-visible {
                background-color: #ededed !important;
            }
            .gap-4 {
                text-align: center;
                margin: 1% auto;
                display: flex;
                justify-content: center;
            }

            .DragNDrop {
                margin: 19% auto;
                font-family: 'Montserrat', sans-serif;
                color: #bdbdbd;
                font-weight: 900;
                text-align: center;
                justify-content: center;
            }

            .mud-paper.mud-paper-outlined.relative {
                display: flex;
                justify-content: center;
                align-items: center;
            }

            .mud-typography.mud-typography-body1 {
                margin: 0 auto;
                text-align: center;
                position: absolute;
            }

            .mud-button-root.align-self-center {
                top: -70px;
            }

            .absolute.mud-width-full.mud-height-full.overflow-hidden:hover {
                cursor: pointer;
            }

            .raz {
                -moz-appearance: textfield;
                background-color: #fff;
                border-radius: 39px;
                padding: 5px 15px 5px 13px;
                width: 200px;
                height: 40px;
            }

                .raz::-webkit-inner-spin-button {
                    display: none;
                }

            .input-wrap {
                display: block;
                position: relative;
                padding-left: 40px;
                margin-bottom: 12px;
                cursor: pointer;
                font-size: 22px;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            .block {
                background-color: rgb(217, 217, 217);
                border-radius: 39px;
                text-align: center;
                padding: 18px;
                margin-top: 15px;
            }

                .block p, .block label {
                    font-weight: 700;
                    font-size: 20px;
                }

                .block span {
                    font-size: 20px;
                    text-transform: uppercase;
                }

            .block-flex {
                display: flex;
                justify-content: space-between;
                width: 80%;
                margin: 0 auto;
            }


            .input-wrap input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
                height: 0;
                width: 0;
            }


            .checkmark {
                position: absolute;
                top: 0px;
                left: 0;
                height: 25px;
                border-radius: 50%;
                width: 25px;
                background-color: #eee;
                transition: all 0.1s ease 0s;
                border: 2px solid #000;
            }

            .input-wrap:hover input ~ .checkmark {
                background-color: rgb(225, 225, 225);
                transition: all 0.3s ease 0s;
            }

            .input-wrap input:checked ~ .checkmark {
                background-color: #000;
                transition: all 0.1s ease 0s;
            }

            .checkmark:after {
                content: "";
                position: absolute;
                display: none;
                transition: all 0.1s ease 0s;
            }

            .input-wrap input:checked ~ .checkmark:after {
                display: block;
            }

            .input-wrap .checkmark:after {
                left: -8px;
                top: -8px;
                height: 32px;
                border-radius: 50%;
                width: 32px;
                border: 3px solid #000;
                background: transparent;
            }

            .switch {
                position: relative;
                display: inline-block;
                width: 60px;
                height: 34px;
            }


                .switch input {
                    display: none;
                }

            .slider {
                position: absolute;
                cursor: pointer;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: #eee;
                -webkit-transition: .4s;
                transition: .4s;
                border: 3px solid #000;
                width: 70px;
            }

                .slider:hover {
                    background-color: rgb(225, 225, 225);
                    transition: all 0.3s ease 0s;
                }

                .slider:before {
                    position: absolute;
                    content: "";
                    height: 23px;
                    width: 23px;
                    left: 5px;
                    bottom: 3px;
                    background-color: #000;
                    -webkit-transition: .4s;
                    transition: .4s;
                }

            input:checked + .slider {
                background-color: #23db45;
            }


                input:checked + .slider:before {
                    -webkit-transform: translateX(33px);
                    -ms-transform: translateX(33px);
                    transform: translateX(33px);
                }

            /* Rounded sliders */
            .slider.round {
                border-radius: 34px;
            }

                .slider.round:before {
                    border-radius: 50%;
                }

            .display-1 {
                font-size: 3rem;
            }

            .p-4 {
                padding: 1rem !important;
            }

            .card-body {
                flex: 1 1 auto;
                padding: 0.5rem;
            }

            .switch-holder {
                display: flex;
                padding: 10px 20px;
                border-radius: 10px;
                box-shadow: -8px -8px 15px rgba(255, 255, 255, .7), 10px 10px 10px rgba(0, 0, 0, .2), inset 8px 8px 15px rgba(255, 255, 255, .7), inset 10px 10px 10px rgba(0, 0, 0, .2);
                justify-content: space-between;
                align-items: center;
            }

            .switch-label {
                padding: 0 20px 0 10px
            }

                .switch-label i {
                    margin-right: 5px;
                }

            .switch-toggle {
                height: 40px;
            }

                .switch-toggle input[type="checkbox"] {
                    position: absolute;
                    opacity: 0;
                    z-index: -2;
                }

                    .switch-toggle input[type="checkbox"] + label {
                        position: relative;
                        display: inline-block;
                        width: 100px;
                        height: 40px;
                        border-radius: 20px;
                        margin: 0;
                        cursor: pointer;
                        box-shadow: inset -8px -8px 15px rgba(255, 255, 255, .6), inset 10px 10px 10px rgba(0, 0, 0, .25);
                    }

                        .switch-toggle input[type="checkbox"] + label::before {
                            position: absolute;
                            content: 'НЕТ';
                            font-size: 13px;
                            text-align: center;
                            line-height: 25px;
                            top: 8px;
                            left: 8px;
                            width: 45px;
                            height: 25px;
                            border-radius: 20px;
                            background-color: #eeeeee;
                            box-shadow: -3px -3px 5px rgba(255, 255, 255, .5), 3px 3px 5px rgba(0, 0, 0, .25);
                            transition: .3s ease-in-out;
                        }

                    .switch-toggle input[type="checkbox"]:checked + label::before {
                        left: 50%;
                        content: 'ДА';
                        color: #fff;
                        background-color: #00b33c;
                        box-shadow: -3px -3px 5px rgba(255, 255, 255, .5), 3px 3px 5px #00b33c;
                    }
        </style>
    </MudCarousel>

</div>

